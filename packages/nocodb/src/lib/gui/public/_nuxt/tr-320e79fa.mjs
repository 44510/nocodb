const general = {
  home: "Ana Sayfa",
  load: "Y\xFCkle",
  open: "A\xE7",
  close: "Kapat",
  yes: "Evet",
  no: "Hay\u0131r",
  ok: "Tamam",
  and: "Ve",
  or: "Veya",
  add: "Ekle",
  edit: "D\xFCzenle",
  remove: "Kald\u0131r",
  save: "Kaydet",
  cancel: "\u0130ptal",
  submit: "G\xF6nder",
  create: "Olu\u015Ftur",
  insert: "Ekle",
  "delete": "Sil",
  update: "G\xFCncelle",
  rename: "Yeniden Adland\u0131r",
  reload: "Yenile",
  reset: "S\u0131f\u0131rla",
  install: "D\xFCzenle",
  show: "G\xF6ster",
  hide: "Gizle",
  showAll: "Hepsini G\xF6ster",
  hideAll: "Hepsini Gizle",
  showMore: "Daha fazla g\xF6ster",
  showOptions: "Se\xE7enekleri g\xF6ster",
  hideOptions: "Se\xE7enekleri gizle",
  showMenu: "Men\xFCy\xFC g\xF6ster",
  hideMenu: "Men\xFCy\xFC gizle",
  addAll: "Hepsini ekle",
  removeAll: "Hepsini kald\u0131r",
  signUp: "\xDCYE OL",
  signIn: "KAYDOL",
  signOut: "Oturumu Kapat",
  required: "Gerekli",
  preferred: "Tercihen",
  mandatory: "Zorunlu",
  loading: "Y\xFCkleniyor ...",
  title: "Ba\u015Fl\u0131k",
  upload: "Y\xFCkle",
  download: "\u0130ndir",
  "default": "Varsay\u0131lan",
  more: "Fazla",
  less: "Az",
  event: "Olay",
  condition: "Ko\u015Ful",
  after: "Sonra",
  before: "\xD6nce",
  search: "Ara",
  notification: "Bildirim",
  reference: "Referans",
  "function": "Fonksiyon"
};
const objects = {
  project: "Proje",
  projects: "Projeler",
  table: "Tablo",
  tables: "Tablolar",
  field: "Alan",
  fields: "Alanlar",
  column: "S\xFCtun",
  columns: "S\xFCtunlar",
  page: "Sayfa",
  pages: "Sayfalar",
  record: "Kay\u0131t",
  records: "Kay\u0131tlar",
  webhook: "Webhook",
  webhooks: "Webhooklar",
  view: "G\xF6r\xFCn\xFCm",
  views: "G\xF6r\xFCn\xFCmler",
  viewType: {
    grid: "Izgara",
    gallery: "Galeri",
    form: "Form",
    kanban: "Kanban",
    calendar: "Takvim"
  },
  user: "Kullan\u0131c\u0131",
  users: "Kullan\u0131c\u0131lar",
  role: "Rol",
  roles: "Roller",
  roleType: {
    owner: "Sahip",
    creator: "Yarat\u0131c\u0131",
    editor: "Edit\xF6r",
    commenter: "Yorumcu",
    viewer: "\u0130zleyici"
  }
};
const datatype = {
  ID: "ID",
  ForeignKey: "Yabanc\u0131 anahtar",
  SingleLineText: "Tek sat\u0131r metin",
  LongText: "Uzun metin",
  Attachment: "Ek dosya",
  Checkbox: "Onay kutusu",
  MultiSelect: "\xC7oklu se\xE7im",
  SingleSelect: "Tek Se\xE7im",
  Collaborator: "Partner",
  "Date": "Tarih",
  Year: "Y\u0131l",
  Time: "Zaman",
  PhoneNumber: "Telefon numaras\u0131",
  Email: "E-posta",
  URL: "URL",
  "Number": "Numara",
  Decimal: "Ondal\u0131k",
  Currency: "Para birimi",
  Percent: "Y\xFCzde",
  Duration: "S\xFCre",
  Rating: "De\u011Ferlendirme",
  Formula: "Form\xFCl",
  Rollup: "Referans hesapla",
  Count: "Say",
  Lookup: "Referans",
  DateTime: "Tarih saat",
  CreateTime: "Olu\u015Fturma zaman\u0131",
  LastModifiedTime: "Son de\u011Fi\u015Ftirilme",
  AutoNumber: "Otomatik Say\u0131",
  Barcode: "Barkod",
  Button: "Buton",
  Password: "\u015Eifre",
  relationProperties: {
    noAction: "\u0130\u015Flevsiz",
    cascade: "Kademeli",
    restrict: "K\u0131s\u0131tla",
    setNull: "NULL yap",
    setDefault: "Varsay\u0131lan yap"
  }
};
const filterOperation = {
  isEqual: "e\u015Fittir",
  isNotEqual: "e\u015Fit de\u011Fil",
  isLike: "gibi",
  "isNot like": "gibi de\u011Fil",
  isEmpty: "bo\u015F",
  isNotEmpty: "bo\u015F de\u011Fil",
  isNull: "null",
  isNotNull: "null de\u011Fil"
};
const title = {
  newProj: "Yeni proje",
  myProject: "Benim projelerim",
  formTitle: "Form ba\u015Fl\u0131\u011F\u0131",
  collabView: "Partner g\xF6r\xFCn\xFCm\xFC",
  lockedView: "Kilitli g\xF6r\xFCn\xFCm",
  personalView: "Ki\u015Fisel g\xF6r\xFCn\xFCm",
  appStore: "Uygulama ma\u011Fazas\u0131",
  teamAndAuth: "Tak\u0131m ve Yetki",
  rolesUserMgmt: "Roller ve Kullan\u0131c\u0131lar\u0131 Y\xF6net",
  userMgmt: "Kullan\u0131c\u0131lar\u0131 Y\xF6net",
  apiTokenMgmt: "API Tokenlar\u0131 Y\xF6net",
  rolesMgmt: "Rolleri Y\xF6net",
  projMeta: "Proje meta verileri",
  metaMgmt: "Meta y\xF6netimi",
  metadata: "Meta veriler",
  exportImportMeta: "Meta verileri d\u0131\u015Fa/i\xE7e aktar",
  uiACL: "UI Eri\u015Fim Kontrol\xFC",
  metaOperations: "Meta veri operasyonlar\u0131",
  audit: "Denetim",
  auditLogs: "Denetim g\xFCnl\xFC\u011F\xFC",
  sqlMigrations: "SQL Aktar\u0131m\u0131",
  dbCredentials: "Veritaban\u0131 Kimlik Bilgileri",
  advancedParameters: "SSL ve Geli\u015Fmi\u015F Parametreler",
  headCreateProject: "Proje Olu\u015Ftur | Nocodb",
  headLogin: "Giri\u015F | Nocodb",
  resetPassword: "\u015Eifrenizi s\u0131f\u0131rlay\u0131n",
  teamAndSettings: "Team & Settings",
  apiDocs: "API Docs",
  importFromAirtable: "Import From Airtable"
};
const labels = {
  notifyVia: "Arac\u0131l\u0131\u011F\u0131yla Bildir",
  projName: "Proje Ad\u0131",
  tableName: "Tablo Ad\u0131",
  viewName: "G\xF6r\xFCn\xFCm Ad\u0131",
  viewLink: "G\xF6r\xFCn\xFCm Linki",
  columnName: "S\xFCtun ad\u0131",
  columnType: "S\xFCtun tipi",
  roleName: "Rol Ad\u0131",
  roleDescription: "Rol Tan\u0131m\u0131",
  databaseType: "Veritaban\u0131ndaki Tipi",
  lengthValue: "Uzunluk / De\u011Fer",
  dbType: "Veritaban\u0131 T\xFCr\xFC",
  sqliteFile: "SQLite Dosyas\u0131",
  hostAddress: "Host Adresi",
  port: "Port Numaras\u0131",
  username: "Kullan\u0131c\u0131 Ad\u0131",
  password: "\u015Eifre",
  schemaName: "Schema name",
  action: "Aksiyon",
  actions: "Aksiyonlar",
  operation: "Operasyon",
  operationType: "Operasyon t\xFCr\xFC",
  operationSubType: "Operasyon alt-t\xFCr\xFC",
  description: "Tan\u0131m",
  authentication: "Kimlik Do\u011Frulama",
  token: "Token",
  where: "Ko\u015Ful",
  cache: "\xD6nbellek",
  chat: "Sohbet",
  email: "E-posta",
  storage: "Depo",
  uiAcl: "UI-ACL",
  models: "Modeller",
  syncState: "Senkronizasyon durumu",
  created: "Olu\u015Fturuldu",
  sqlOutput: "SQL \xC7\u0131kt\u0131s\u0131",
  addOption: "Se\xE7enek ekle",
  aggregateFunction: "Birle\u015Ftirme fonksiyonu",
  dbCreateIfNotExists: "Veritaban\u0131 : yoksa olu\u015Ftur",
  clientKey: "M\xFC\u015Fteri Anahtar\u0131",
  clientCert: "M\xFC\u015Fteri Sertifikas\u0131",
  serverCA: "Sunucu CA",
  requriedCa: "Gerekli-CA",
  requriedIdentity: "Gerekli-Kimlik",
  inflection: {
    tableName: "D\xFCzelt - Tablo Adlar\u0131",
    columnName: "D\xFCzelt - S\xFCtun Adlar\u0131"
  },
  community: {
    starUs1: "Y\u0131ld\u0131zlay\u0131n",
    starUs2: "bizi Github'ta",
    bookDemo: "\xDCcretsiz bir demo rezervasyonu yap\u0131n",
    getAnswered: "Sorular\u0131n\u0131za cevap bulun",
    joinDiscord: "Discord'a kat\u0131l",
    joinCommunity: "Join NocoDB Community",
    joinReddit: "/r/NocoDB'ye kat\u0131l",
    followNocodb: "NocoDB'yi takip et"
  },
  docReference: "Dosya Referans\u0131",
  selectUserRole: "Kullan\u0131c\u0131 Rol\xFC Se\xE7",
  childTable: "Alt tablo",
  childColumn: "Alt s\xFCtun",
  onUpdate: "G\xFCncellenince",
  onDelete: "Silinince"
};
const activity = {
  createProject: "Proje Olu\u015Ftur",
  importProject: "Projeyi i\xE7e aktar",
  searchProject: "Proje ara",
  editProject: "Projeyi D\xFCzenle",
  stopProject: "Projeyi Durdur",
  startProject: "Proje Ba\u015Flat",
  restartProject: "Projeyi Yeniden Ba\u015Flat",
  deleteProject: "Projeyi Sil",
  refreshProject: "Projeleri Yenile",
  saveProject: "Projeyi Kaydet",
  createProjectExtended: {
    extDB: "Ba\u011Flanarak olu\u015Fturun <br>D\u0131\u015Far\u0131dan bir veritaban\u0131na",
    excel: "Excel'den Proje Olu\u015Ftur",
    template: "\u015Eablon'dan Proje Olu\u015Ftur"
  },
  OkSaveProject: "Tamam & Projeyi Kaydet",
  upgrade: {
    available: "G\xFCncelleme mevcut",
    releaseNote: "S\xFCr\xFCm notlar\u0131",
    howTo: "Nas\u0131l g\xFCncellenir?"
  },
  translate: "\xC7eviriye katk\u0131",
  account: {
    authToken: "Yetki Token'\u0131n\u0131 Kopyala",
    swagger: "Swagger API Dok\xFCmantasyonu",
    projInfo: "Proje Bilgisini Kopyala",
    themes: "Temalar"
  },
  sort: "S\u0131rala",
  addSort: "S\u0131ralama Se\xE7ene\u011Fi Ekle",
  filter: "Filtrele",
  addFilter: "Filtre Ekle",
  share: "Payla\u015F",
  shareBase: {
    disable: "Payla\u015F\u0131lan ba\u011Flant\u0131y\u0131 devre d\u0131\u015F\u0131 b\u0131rak",
    enable: "Ba\u011Flant\u0131ya sahip olan herkes",
    link: "Payla\u015F\u0131lan ba\u011Flant\u0131"
  },
  invite: "Davet et",
  inviteMore: "Daha fazla davet et",
  inviteTeam: "Tak\u0131ma davet et",
  inviteToken: "Davet kodu",
  newUser: "Yeni kullan\u0131c\u0131",
  editUser: "Kullan\u0131c\u0131y\u0131 d\xFCzenle",
  deleteUser: "Kullan\u0131c\u0131y\u0131 projeden kald\u0131r",
  resendInvite: "Davet e-postas\u0131n\u0131 yeniden g\xF6nder",
  copyInviteURL: "Davet linkini kopyala",
  newRole: "Yeni rol",
  reloadRoles: "Rolleri yeniden y\xFCkle",
  nextPage: "Sonraki Sayfa",
  prevPage: "\xD6nceki sayfa",
  nextRecord: "Sonraki kay\u0131t",
  previousRecord: "\xD6nceki kay\u0131t",
  copyApiURL: "API linkini kopyala",
  createTable: "Tablo Olu\u015Ftur",
  refreshTable: "Tablolar\u0131 Yenile",
  renameTable: "Tabloyu Yeniden Adland\u0131r",
  deleteTable: "Tabloyu Sil",
  addField: "Tabloya yeni alan ekle",
  setPrimary: "Birincil de\u011Fer yap",
  addRow: "Yeni sat\u0131r ekle",
  saveRow: "Sat\u0131r\u0131 kaydet",
  insertRow: "Yeni Sat\u0131r Ekle",
  deleteRow: "Sat\u0131r\u0131 Sil",
  deleteSelectedRow: "Se\xE7ilen Sat\u0131rlar\u0131 Sil",
  importExcel: "Excel'i i\xE7e aktar",
  importCSV: "Import CSV",
  downloadCSV: "CSV olarak indir",
  downloadExcel: "XLSX olarak indir",
  uploadCSV: "CSV y\xFCkle",
  "import": "\u0130\xE7e aktar",
  importMetadata: "Meta verilerini i\xE7e aktar",
  exportMetadata: "Meta verilerini d\u0131\u015Fa aktar",
  clearMetadata: "Meta verilerini temizle",
  exportToFile: "Dosya olarak d\u0131\u015Fa aktar",
  changePwd: "\u015Eifre de\u011Fi\u015Ftir",
  createView: "Bir g\xF6r\xFCn\xFCm olu\u015Ftur",
  shareView: "G\xF6r\xFCn\xFCm\xFC payla\u015F",
  listSharedView: "Payla\u015F\u0131lan G\xF6r\xFCn\xFCmler",
  ListView: "G\xF6r\xFCn\xFCmler Listesi",
  copyView: "G\xF6r\xFCn\xFCm\xFC kopyala",
  renameView: "G\xF6r\xFCn\xFCm\xFC yeniden adland\u0131r",
  deleteView: "G\xF6r\xFCn\xFCm\xFC sil",
  createGrid: "Izgara g\xF6r\xFCn\xFCm\xFC olu\u015Ftur",
  createGallery: "Galeri g\xF6r\xFCn\xFCm\xFC olu\u015Ftur",
  createCalendar: "Takvim g\xF6r\xFCn\xFCm\xFC olu\u015Ftur",
  createKanban: "Kanban g\xF6r\xFCn\xFCm\xFC olu\u015Ftur",
  createForm: "Form g\xF6r\xFCn\xFCm\xFC olu\u015Ftur",
  showSystemFields: "Sistem alanlar\u0131n\u0131 g\xF6ster",
  copyUrl: "Linki kopyala",
  openTab: "Yeni sekme a\xE7",
  iFrame: "G\xF6m\xFCl\xFC HTML kodunu kopyalay\u0131n",
  addWebhook: "Yeni Webhook ekle",
  newToken: "Yeni Token ekle",
  exportZip: "Zip olarak d\u0131\u015Fa aktar",
  importZip: "Zip olarak i\xE7e aktar",
  metaSync: "Senkronize et",
  settings: "Ayarlar",
  previewAs: "\xD6nizleme modu",
  resetReview: "\xD6nizlemeyi s\u0131f\u0131rla",
  testDbConn: "Veritaban\u0131 Ba\u011Flant\u0131s\u0131n\u0131 Test Et",
  removeDbFromEnv: "Veritaban\u0131n\u0131 Kald\u0131r",
  editConnJson: "JSON ba\u011Flant\u0131s\u0131n\u0131 d\xFCzenle",
  sponsorUs: "Bizi Destekle",
  sendEmail: "E-POSTA G\xD6NDER"
};
const tooltip = {
  saveChanges: "De\u011Fi\u015Fiklikleri Kaydet",
  xcDB: "Yeni bir proje olu\u015Ftur",
  extDB: "MySQL, PostgreSQL, SQL Server & SQLite destekler",
  apiRest: "REST API \xFCzerinden eri\u015Filebilir",
  apiGQL: "GraphQL API \xFCzerinden eri\u015Filebilir",
  theme: {
    dark: "Koyu geliyor (^\u21E7B)",
    light: "Koyu mu geliyor (^\u21E7B)"
  },
  addTable: "Yeni tablo ekle",
  inviteMore: "Daha fazla kullan\u0131c\u0131 davet et",
  toggleNavDraw: "Gezinme \xE7ubu\u011Fu",
  reloadApiToken: "API Tokenlar\u0131n\u0131 Yenile",
  generateNewApiToken: "Yeni API Token\u0131 Olu\u015Ftur",
  addRole: "Yeni rol ekle",
  reloadList: "Listeyi yenile",
  metaSync: "Meta verileri senkronize et",
  sqlMigration: "Aktar\u0131mlar\u0131 yenile",
  updateRestart: "G\xFCncelle & Yeniden Ba\u015Flat",
  cancelReturn: "\u0130ptal et ve geri d\xF6n",
  exportMetadata: "T\xFCm meta verileri meta tablolar\u0131ndan meta dizinine aktar",
  importMetadata: "T\xFCm meta verileri meta dizininden meta tablolar\u0131na aktar",
  clearMetadata: "T\xFCm meta verileri meta tablolar\u0131ndan temizle",
  clientKey: ".key dosyas\u0131n\u0131 se\xE7in",
  clientCert: ".cert dosyas\u0131n\u0131 se\xE7in",
  clientCA: "CA dosyas\u0131n\u0131 se\xE7in"
};
const placeholder = {
  projName: "Proje Ad\u0131n\u0131 Girin",
  password: {
    enter: "\u015Eifreyi Girin",
    current: "Mevcut \u015Eifre",
    "new": "Yeni \u015Eifre",
    save: "\u015Eifreyi Kaydet",
    confirm: "Yeni \u015Fifreyi onayla"
  },
  searchProjectTree: "Tablolar\u0131 ara",
  searchFields: "S\xFCtunlar\u0131 ara",
  searchColumn: "{search} s\xFCtununda ara",
  searchApps: "Uygulamalarda ara",
  searchModels: "Modellerde ara",
  noItemsFound: "Hi\xE7 bir \xF6\u011Fe bulunamad\u0131",
  defaultValue: "Varsay\u0131lan de\u011Fer",
  filterByEmail: "E-posta ile filtrele"
};
const msg = {
  info: {
    footerInfo: "Sayfa ba\u015F\u0131na sat\u0131r",
    upload: "Y\xFCklenecek Dosyay\u0131 Se\xE7in",
    upload_sub: "veya dosyay\u0131 s\xFCr\xFCkleyip b\u0131rak\u0131n",
    excelSupport: "Desteklenen: .xls, .xlsx, .xlsm, .ods, .ots",
    excelURL: "Excel dosyas\u0131 linkini girin",
    csvURL: "Enter CSV file URL",
    footMsg: "Veri t\xFCr\xFCn\xFC bulmak i\xE7in ayr\u0131\u015Ft\u0131r\u0131lacak sat\u0131r say\u0131s\u0131 #",
    excelImport: "sayfa(lar) i\xE7e aktar\u0131labilir",
    exportMetadata: "Meta verileri meta tablolar\u0131ndan d\u0131\u015Fa aktarmak ister misiniz?",
    importMetadata: "Meta verileri meta tablolar\u0131ndan i\xE7e aktarmak ister misiniz?",
    clearMetadata: "Meta verileri meta tablolar\u0131ndan temizlemek ister misiniz?",
    projectEmptyMessage: "Yeni bir proje olu\u015Fturarak ba\u015Flay\u0131n",
    stopProject: "Projeyi durdurmak istedi\u011Finize emin misiniz?",
    startProject: "Projeyi ba\u015Flatmak istedi\u011Finize emin misiniz?",
    restartProject: "Projeyi yeniden ba\u015Flatmak istedi\u011Finize emin misiniz?",
    deleteProject: "Projeyi silmek istedi\u011Finize emin misiniz?",
    shareBasePrivate: "Herkese a\xE7\u0131k payla\u015F\u0131labilir salt-okunur ba\u011Flant\u0131",
    shareBasePublic: "Bu link ile internetteki herkes g\xF6r\xFCnt\xFCleyebilir",
    userInviteNoSMTP: "Hen\xFCz mail ayarlar\u0131 yap\u0131lmam\u0131\u015F gibi g\xF6r\xFCn\xFCyor! \\n L\xFCtfen yukar\u0131daki davet linkini kopyalay\u0131n ve g\xF6nderin",
    dragDropHide: "Gizlemek i\xE7in s\xFCtunlar\u0131 buraya s\xFCr\xFCkleyip b\u0131rak\u0131n",
    formInput: "Form girdi etiketini girin",
    formHelpText: "Yard\u0131m metni ekleyin",
    onlyCreator: "Sadece Yarat\u0131c\u0131'ya g\xF6r\xFCn\xFCr",
    formDesc: "Form a\xE7\u0131klamas\u0131 ekleyin",
    beforeEnablePwd: "Eri\u015Fimi parola ile s\u0131n\u0131rland\u0131r\u0131n",
    afterEnablePwd: "Eri\u015Fim parola ile k\u0131s\u0131tlanm\u0131\u015F",
    privateLink: "Bu g\xF6r\xFCn\xFCm \xF6zel bir ba\u011Flant\u0131 \xFCzerinden payla\u015F\u0131l\u0131yor",
    privateLinkAdditionalInfo: "\xD6zel ba\u011Flant\u0131s\u0131 olan ki\u015Filer yaln\u0131zca bu g\xF6r\xFCn\xFCmdeki h\xFCcreleri g\xF6rebilir",
    afterFormSubmitted: "Form g\xF6nderildikten sonra",
    apiOptions: "Projeye ile eri\u015F",
    submitAnotherForm: "Ba\u015Fka Bir Form G\xF6nder' d\xFC\u011Fmesini g\xF6ster",
    showBlankForm: "5 saniye sonra bo\u015F bir form g\xF6ster",
    emailForm: "Bana e-posta g\xF6nder",
    showSysFields: "Sistem alanlar\u0131n\u0131 g\xF6ster",
    filterAutoApply: "Otomatik Uygula",
    showMessage: "Bu mesaj\u0131 g\xF6ster",
    viewNotShared: "Ge\xE7erli g\xF6r\xFCn\xFCm payla\u015F\u0131lm\u0131yor!",
    showAllViews: "Bu tablonun t\xFCm payla\u015F\u0131lan g\xF6r\xFCn\xFCmlerini g\xF6ster",
    collabView: "D\xFCzenleme ya da \xFCzeri yetkiye sahip kat\u0131l\u0131mc\u0131lar g\xF6r\xFCn\xFCm ayarlar\u0131n\u0131 de\u011Fi\u015Ftirebilir.",
    lockedView: "Kilidi a\xE7\u0131lana kadar kimse g\xF6r\xFCn\xFCm ayarlar\u0131n\u0131 d\xFCzenleyemez.",
    personalView: "Yaln\u0131zca siz g\xF6r\xFCn\xFCm ayarlar\u0131n\u0131 d\xFCzenleyebilirsiniz. Di\u011Fer kat\u0131l\u0131mc\u0131lar\u0131n ki\u015Fisel g\xF6r\xFCn\xFCmleri varsay\u0131lan olarak gizlendi.",
    ownerDesc: "Yarat\u0131c\u0131 ekleyebilir/silebilir. Ve t\xFCm veritaban\u0131 yap\u0131lar\u0131n\u0131 & s\xFCtunlar\u0131n\u0131 d\xFCzenleyebilir.",
    creatorDesc: "T\xFCm veritaban\u0131 yap\u0131lar\u0131n\u0131 & de\u011Ferlerini d\xFCzenleyebilir.",
    editorDesc: "Kay\u0131tlar\u0131 d\xFCzenleyebilir ancak veritaban\u0131 yap\u0131s\u0131n\u0131 ya da s\xFCtunlar\u0131 de\u011Fi\u015Ftiremez.",
    commenterDesc: "Kay\u0131tlar\u0131 g\xF6r\xFCnt\xFCleyebilir ve yorumlayabilir ancak hi\xE7 bir \u015Feyi d\xFCzenleyemez.",
    viewerDesc: "Yaln\u0131zca kay\u0131tlar\u0131 g\xF6r\xFCnt\xFCleyebilir.",
    addUser: "Yeni kullan\u0131c\u0131 ekle",
    staticRoleInfo: "Sistem tan\u0131ml\u0131 roller d\xFCzenlenemez",
    exportZip: "Proje metas\u0131n\u0131 zip olarak d\u0131\u015Fa aktar ve indir.",
    importZip: "Proje metas\u0131n\u0131 zip olarak i\xE7e aktar ve yeniden ba\u015Flat.",
    importText: "Metadata zip dosyas\u0131 y\xFCkleyerek NocoDB Projesini i\xE7e aktar",
    metaNoChange: "Herhangi bir de\u011Fi\u015Fiklik alg\u0131lanmad\u0131",
    sqlMigration: "\u015Eema aktar\u0131mlar\u0131 otomatik olarak olu\u015Fturalacak. Bir tablo olu\u015Fturup bu sayfay\u0131 yenileyin.",
    dbConnectionStatus: "Ortam do\u011Fruland\u0131",
    dbConnected: "Ba\u011Flant\u0131 ba\u015Far\u0131l\u0131",
    notifications: {
      no_new: "Yeni bildirim yok",
      clear: "Temizle"
    },
    sponsor: {
      header: "Bize yard\u0131m edebilirsiniz!",
      message: "Biz NocoDB \xF6zg\xFCr yaz\u0131l\u0131m\u0131 \xFCzerinde tam zamanl\u0131 \xE7al\u0131\u015Fan k\xFC\xE7\xFCk bir tak\u0131m\u0131z. \u0130nan\u0131yoruz ki NocoDB gibi bir ara\xE7 internetteki herkes i\xE7in eri\u015Filebilir olmal\u0131."
    },
    loginMsg: "NocoDB'ye Giri\u015F Yap",
    passwordRecovery: {
      message_1: "L\xFCtfen kay\u0131t olurken kulland\u0131\u011F\u0131n\u0131z e-posta adresini girin.",
      message_2: "Size \u015Fifre s\u0131f\u0131rlama linki i\xE7eren bir mail g\xF6nderece\u011Fiz.",
      success: "L\xFCtfen \u015Fifrenizi s\u0131f\u0131rlamak i\xE7in e-postan\u0131z\u0131 kontrol edin."
    },
    signUp: {
      superAdmin: "S\xFCper Admin' olacaks\u0131n\u0131z.",
      alreadyHaveAccount: "Zaten hesab\u0131n\u0131z var m\u0131?",
      workEmail: "\u0130\u015F e-postan\u0131z\u0131 girin",
      enterPassword: "\u015Eifrenizi girin",
      forgotPassword: "Parolan\u0131z\u0131 m\u0131 unuttunuz?",
      dontHaveAccount: "Hesab\u0131n\u0131z yok mu?"
    },
    addView: {
      grid: "Izgara g\xF6r\xFCn\xFCm\xFC ekle",
      gallery: "Galeri g\xF6r\xFCn\xFCm\xFC ekle",
      form: "Form g\xF6r\xFCn\xFCm\xFC ekle",
      kanban: "Kanban g\xF6r\xFCn\xFCm\xFC ekle",
      calendar: "Takvim g\xF6r\xFCn\xFCm\xFC ekle"
    },
    tablesMetadataInSync: "Tablonun meta verileri senkronize",
    addMultipleUsers: "Birden \xE7ok virg\xFCl(,) ile ayr\u0131lm\u0131\u015F e-posta ekleyebilirsin",
    enterTableName: "Tablo ad\u0131 gir",
    addDefaultColumns: "Varsay\u0131lan kolonlar\u0131 ekle",
    tableNameInDb: "Veritaban\u0131nda kay\u0131t edildi\u011Fi \u015Fekilde tablo adlar\u0131"
  },
  error: {
    searchProject: "{search} i\xE7in araman\u0131z hi\xE7 bir sonu\xE7 bulamad\u0131",
    invalidChar: "Klas\xF6r yolunda ge\xE7ersiz karakter.",
    invalidDbCredentials: "Veritaban\u0131 kimlik bilgileri yanl\u0131\u015F.",
    unableToConnectToDb: "Veritaban\u0131na ba\u011Flan\u0131lam\u0131yor, veritaban\u0131n\u0131z\u0131n eri\u015Filebilir oldu\u011Fundan emin olun.",
    userDoesntHaveSufficientPermission: "Kullan\u0131c\u0131 mevcut de\u011Fil ya da \u015Fema olu\u015Fturmak i\xE7in yeterli izne sahip de\u011Fil",
    dbConnectionStatus: "Hatal\u0131 veritaban\u0131 parametreleri",
    dbConnectionFailed: "Ba\u011Flant\u0131 hatas\u0131:",
    signUpRules: {
      emailReqd: "E-posta gerekli",
      emailInvalid: "E-posta ge\xE7erli olmal\u0131",
      passwdRequired: "\u015Eifre gerekli",
      passwdLength: "\u015Eifreniz en az 8 karakter olmal\u0131d\u0131r"
    }
  },
  toast: {
    exportMetadata: "Proje meta verileri ba\u015Far\u0131yla d\u0131\u015Fa aktar\u0131ld\u0131",
    importMetadata: "Proje meta verileri ba\u015Far\u0131yla i\xE7e aktar\u0131ld\u0131",
    clearMetadata: "Proje meta verileri ba\u015Far\u0131yla temizlendi",
    stopProject: "Proje ba\u015Far\u0131yla durduruldu",
    startProject: "Proje ba\u015Far\u0131yla ba\u015Flat\u0131ld\u0131",
    restartProject: "Proje ba\u015Far\u0131yla yeniden ba\u015Flat\u0131ld\u0131",
    deleteProject: "Proje ba\u015Far\u0131yla silindi",
    authToken: "Yetki token\u0131 ba\u015Far\u0131yla kopyaland\u0131",
    projInfo: "Proje bilgisi kopyaland\u0131",
    inviteUrlCopy: "Davet ba\u011Flant\u0131s\u0131 kopyaland\u0131",
    createView: "G\xF6r\xFCn\xFCm ba\u015Far\u0131yla olu\u015Fturuldu",
    formEmailSMTP: "E-posta bildirimlerini aktifle\u015Ftirmek i\xE7in l\xFCtfen uygulama ma\u011Fazas\u0131ndan SMPT eklentisini aktifle\u015Ftirin",
    collabView: "Ba\u015Far\u0131yla partner g\xF6r\xFCn\xFCm\xFCne ge\xE7ildi",
    lockedView: "Ba\u015Far\u0131yla kilitli g\xF6r\xFCn\xFCm\xFCne ge\xE7ildi",
    futureRelease: "\xC7ok yak\u0131nda!"
  }
};
var tr = {
  general,
  objects,
  datatype,
  filterOperation,
  title,
  labels,
  activity,
  tooltip,
  placeholder,
  msg
};
export { activity, datatype, tr as default, filterOperation, general, labels, msg, objects, placeholder, title, tooltip };
